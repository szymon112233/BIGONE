image: "gableroux/unity3d:2019.1.0f2"

stages:
- test
- build
- deploy

variables:
  BUILD_NAME: ExampleProjectName

.unity_before_script: &unity_before_script
  before_script:
  - chmod +x ./ci/before_script.sh && ./ci/before_script.sh

.test: &test
  stage: test
  <<: *unity_before_script
  script:
  - chmod +x ./ci/test.sh && ./ci/test.sh
  artifacts:
    paths:
    - $(pwd)/$TEST_PLATFORM-results.xml

test-editmode:
  <<: *test
  variables:
    TEST_PLATFORM: editmode

test-playmode:
  <<: *test
  variables:
    TEST_PLATFORM: playmode

.build: &build
  stage: build
  #tip: you can reuse same stage to do everything in parallel and reduce overall time
  # stage: test
  <<: *unity_before_script
  script:
  - chmod +x ./ci/build.sh && ./ci/build.sh

  artifacts:
    paths:
    - ./Builds/
#tip: uncomment following lines if you'd like to build only on master branch
#   only:
#     - master

build-StandaloneLinux64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneLinux64

build-StandaloneOSX:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneOSX

#Note: build target names changed in recent versions, use this for versions < 2017.2:
# build-StandaloneOSXUniversal:
#   <<: *build
#   variables:
#     BUILD_TARGET: StandaloneOSXUniversal

build-StandaloneWindows64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneWindows64

#build-WebGL:
#  <<: *build
#  variables:
#    BUILD_TARGET: WebGL

#pages:
#  image: alpine:latest
#  stage: deploy
#  script:
#  - mv ./Builds/WebGL public
#  artifacts:
#    paths:
#    - public
#  only:
#  - master

